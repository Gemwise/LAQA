%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 Copyright 2021 Radical Eye Software
%%Title: 6f289418e26df2d585f9188ec78f041f.dvi
%%CreationDate: Sat Apr 22 12:56:01 2023
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 238 175
%%DocumentFonts: CMR10 CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\lenovo\AppData\Local\Temp\tmp1ut2ng3x\tmp.ps
%+ C:\Users\lenovo\.matplotlib\tex.cache\6f289418e26df2d585f9188ec78f041f.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2023.04.22:2056
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2021 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 75 /K put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9173633D9B50449E0
F9026E7A4CC1A3694D6C030E5AE53C0DAAF90B0046E22E14FF2787AC8194C42A
4B8846856AD0317D4B3DF9BFE6410CEE3D007A9BA4492004D60D76F14B923C1F
03C2219F505C21CF15C87A050DE33C5C1C2E6189F59CC5B8486BB098E50B871A
B4D87D9B40C9C520F3266C1BBA1C8666DC4C220A6EBAD7A135162C29A981A564
F9C6419C90BB2494FA5732CE92FFE83D3D567C00338AF23F4B86D95489B4605D
EEA7E933A5E903CD786682CAD289EAEC2BB23749FC2DEFBE47584D441EBE34B4
481D942F0F3642347591D288B5084859E7291F9223D238D122A0257AE43DD8FB
E8C1D5531A9A98810571BAC861FBC009D14D1EDA91976CABB8D2633A75484E7C
18E92C40E54102BE1BE58749C6E619649DD8757353868353787F3D69D1D3FFE4
D1C157DAB9DD829C3E846F1BC5396446070CD4CF4321AADAFA49ACC844414BB0
C40926CAC1F967B120F0DE6883FEED925B499D39F3548ADC65536D31CCC9A33D
68B9C6E96989BAC3393C9CDC5BF365A2A329A31882983717EE62854091F86DA0
7048CE840D9A4EE52576F144DC3C3E8E3DDFB41AB2C9B8DC1A4343B787494CA7
4D05011A9126E2812D8A6E2F7B4C017DFE088E9497CD36CB462B34832FFD04E7
7831026B053CCE6E5C60FD39EF65B3B7A25445EFEC832D622F4B3093E57BC377
3BB59F91AD7366D131D78FF7CEE296FDF8F34ADD1AABE226E92B9834309B4ACB
FD6A561AD176529E2625280B2A04997C0A06B5043DDEA5DBB9E2932810BEE658
D2BE0BC3D3AB27F9B4D7299EC853A13D72B5607C64251D0805E18BF623897DD1
2E29A2F76A2B73837475F6768977AEE15DDA91F71E5F2A9BEDC76FAF60B50070
73D877562284C427D830261A2B62763DB592E6485B2BC62095B0DE48AF04769B
6DBE66B6797C75016F54596332319E711D97F4DA11F0F071B055A06FB61E411E
0B09568D1AB5149F8445716249D3BE0A7D2DFE8DB09D09E4E8CF89FB4669D17D
848C402CE83C18775B3C96C029C020F41EE12846E5841546E079C3053AF12675

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 76 /L put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9435B8575DDAB8AF9358720367
9A974E13D88C63121A3196210E0C1363B06E0C4CB49A374F2A0C163CE0512B66
7AC78A09A780813B1FF02AA967B12AAFAA0C4E797EF349A0EB76D9524D9345E8
226E83D3291C80B65879B61B4A077FADD338BC77A464602E0BD074661C9CB015
C94B3BEFCB03A509EE26B3410BA3333480CD0512D9106927A9E59B7B92FF069D
319CD1A09268391901E5A854A459FEA1D104DB756E50BB0029744C713DCCEAD9
FD1D5519E7CF062BEA33EF6C9068B9E9F5579108623195BB83FC313D97F62AD7
88D7A56D82E33A34FA201FD771A2F4F50BD1BB37ED50880D77F0FE3AEDD3011A
7D9860D59AC7A988C4516ED8B4B5ED7297EE576202FD04008079F09BB2FB82B1
D1E2E076074BFF0EAD54D62A75A2E230F9A250F75CC7893E77F406499A2B12B9
53D0AE1984D78EF2399E862A225988491201A7A7E5884507930BD0C12B55EC21
B9DC4B1C37D159D01BFF4511CDC412A885258111779F308C3AC1357834C33171
533EAC38A2303969F4228CBAC20A628121B6317FB8E40E11E48E61DC6DB3FD91
1544F3FD327A316832E83149C3860AB557A620C0DC3B70D5D07A9411B6E88C18
CFD9B234CF2F2D603D02666BDEB5AE7DFBB73FD1A0039F86E8489003F84951DA
D3E9ACB79888AF725FDD44F3B23F8FBACF1E5FFBEC24A6DED407DCA42C29BAC2
0A476A80199EEDB5321E15099FC29029DE39F393E7D50D28C63304BA3758C081
E37057DE0BC5B2799B4A6B62A9C9BBCF1FC0273DE696271D1C73675BC4DEBA55
8D53A63F9F1D30B9B89C5FE7231C62C5F3370C9D15D9F54C6ABD9CBBB7539660
4429CB524FA22B5F8C8ED0405F7C3F7868DCF6201E0E9C2118A055DB5AE88612
55377D02C00E0F07C982883C1FCF9450F18A9CE34810CAD23E976B2099A55DD0
CB0B96E1DC870B856ADE20EBA3FA90A30E2AC8B0202BB139834C9488B2F34CA5
FA4F71990DD12282098A26392FBA3C3FE5BEA07AF46762375B3B86AA84933ECA
91F39076EE06BFD3BE097AA4C67A18486D3A991DF94EB94F346420EE4A9F0532
31FA147F663BB0DA931A452CD265CF94A802B68AF5A812083925FF68C41330F3
C904F7BA1A628B971AB1F757694CB3A9976CC31133E6F388E1C1C783E56B8A82
A1FF9EDE66C5CBB5FE64E97B24A0069127404EDB828ED38ADAE77DEBAB8084EC
9A7564AAE4250DD6387A4CF1E57A190FECA1C07F42C53E8733A85F5D1757610C
9F4B12067CA525859B73687DE9854D9CE99B91D6421F318493698970AD86481A
6318F9D925789D3B48E824D87505F023C7D3B1F6342DCC35BEB260BBC0612A10
09AE94AC4F7C4F53535FE7CC9648650867FB60FB31CAEBF065F610B00B579C4A
6E1D3A4BD9F0B7E0B28447E741364E315E7A1B22E74255373F4A5B8F17CEFE2F
0CE7C65074A99F921EB54A40AED70EA59FABA70311DF25E3A803A1D316A19869
B42F3100FFFED16E00AE7B6B014EAE41DC34507FF654F27464C3E04EC0A2F659
033D05CEBD16BB697B5D578DEBFB8628F9156100AF21730FDA06A9F41B8DAA9D
3347B158139B54C5D7EC59DA3500F965AE83DE11FFF1D03C0E249EDD9A62E234
46F9F5A588B763F4B524313B54497FC140FF9F91B58F7020F6DF8E651F85EBA0
BC85A9EAA164A4716C547DA3690E70DCAC49BF53BE426157186285E841115A03
750F8D16D9EE23801340BDA7E41941A3FCB7FA316F005E8F36708C383AB6FE36
C090AF976DDC51372736D11CF0B28E58FB4E72E0C1A721825DE3BD486EAC8348
05AC955F41604BE0FF069DD38912D25A5D0B1CC8E410FA31A7DC2B9FCAE31132
8354A361D368A5C016172C6715E4749E6635DAAC4A2EC5C445919C892CD4184A
B543B10A88741B7A782623C273B594B2F88F34118C14AD53F67C2BA8AB5DCC8E
6BBF6671FD4BB80E151FDE8FED9F5E0C1A0299984D5CF3C0A09F68895770EC42
B469B08C7092733A204525B8AB0F671B02BA487CF6B588EBECD26F9BB7E8DE0A
C42057FCB4B98CDD23C4D7A498375D8A7B2208B3D5AEF2194D8C3C8A03805111
ED7DCD009BB3E285560F17EE8C58E25A36BE609EC67BB6FBDDBF5645FABEDADA
3537DAB9B8B70047B6D2CFA4ECE95F53B433F560E902653714B84F55FDA82CC8
6AA1B536F2EDE94419488CEC77941EE8A8C0704DEAE7070F64ECB9A680810C29
56718D32E220698D8B2A84F557CC1B5B0FE37EEABC64BFA014548F6A3183BF16
95FF3A8CA25DFC7C859ABFEF798E43F7514778E231C21F46955BCD54FA29C398
625E1FAB9FBBE250F5A6B99937397392B9559140D597F2C3777043B217291EFD
F0F33BDAFB3ADDCA6D40BA17195C8530C373FDCD38877ECD01B393630BD629CE
E07E06DF83614E2E11CBA56062181F71C22EE1CAD1308E8E2E8FF8BA83F1E7F1
4A4C6F7ED72689635BE666DCF05EC8CDFB2C261F5DAB09EEA837C34105FC0BD6
6D77DF8B902D24C93BD44654051AC5DB42E46653449EE97E88DEC060C0252CA2
E3EFEDE1DBED285976A66E0E6D9A38314517C2A2BE164FD761EE98B3F46DF2B6
7A1D1C0F5D153347C741122E04A719EE49B5E3BF881F2D1347C5A1FE39542C90
1D62FBE5B5E2972A4DA72A6B44897323F8DAC338B7B755982832C56B36693E9A
3C0BE49D6E0A47A7C6811EABCD71C983664A887602AB714B66F001C5A955D16E
72189EC212204E9DAB8CCFDC7A2ED1CC6EF05E7BE3767D68053B9A33C058F591
4825ABDB71FAADB45F85B90C026CCE185EA4BFBD27C7EA54BDFAFB92C64EC82E
C805FC436052CAFE39038CFAC0EDDC71FA7E47C2142F75D575201860EE424EE8
DEE2EE37DE139D7FFE85A27BEFCB54D3C9B11A3AA855AA4BF718AF6D48FB2439
EB47FBC105C6519744FE81D60B205AAF36C9ACE2AAAB0B8484BA3484CE1B74F4
5732DA28DF03258CE4F7F89B3BD508E371B2A78B89881D1E6F9AD0E60F42B308
57EC5CD2FB4EFA5A8E48AB87BA6E9E9CB9AC636430D496E772B134E967A87C75
DDB0CF6D2B6FDC79C164824B6E3E3C3E69366B759B352F6AF5B407C7450D833C
C54309BB9A7B79C4E91724F312EAE42C64C25B2CE086713E396437D37A135783
DB2AA4F7A9AAFAD7BD135D366B6614096E71FE02A94198A795E90511E194796F
CCAC48D9528D94E4C11AA997F3DC8C8F7EC1AB40CF10375145C5E0924BE03377
539522DD703A299F4EE2AF9696E51610F70ED9CBB8FBFB2939704115144829B7
D7618C463277CB67B37870CB666228F46B721A6B4A872E8A9E839B5BDF566CAD
97FC558EFEC4EE9F226EA9AC483BA2F5A83AF5EBABC418B58ABF2948A4FE67DE
107025B6AD35E55608F04D8C34E262E05B2BFC794067208245F86804B1F6C23B
B44AA01F82578A10EBAF648A872782B5F5A2EF904FB154A85F6D7E0C72B9B0A3
87A79F7914D86ACA8188D75C5A6B4B70CA43C3D4484AB57D44B4820E391BEB84
32FE2021C1BBC1C005CE38BD1FA735B50FE1DF5BF477DDA7B3F845EA93B52EE8
B592447100823C1FCCA09C9902BFDEDDF1EC8E713CEF0FAFD3EB5976B7F3DE7F
2F72643D01F6B8E7F63B3C3E10A79CC2056793040D80EFD11349C4C69C9E1BD6
A58C66AA4BBAF2106F3142F05E1BF4C02B69C90B0024706A3D4CAE1500364132
15551EBD9B8F4AA0386605761DC18973923F6B3438E7996987F47EB8778E2CCD
412C12BC416D169D1A7BE0336608DC16E39524FC1350FA74326EAF079FFDE1B0
C2022F286CF5BE9F2832A5FCD0964EDAF5F25A369C22AE701107EE6541A2BA77
DE5A1D75DEC561025614D817D8D5BD54961EAF76D9FD5F6CB3E3E35494D39012
78F794908C83D827BC9567619760234612804B5679E5C1FA8A59EEFB1E6DF1ED
1F743447DB5B81C8250D45B1D4EEC1F89E2D00D86C010D35EB84D98B8D838A1A
888664E09914447BEED336E002FEC2BBA563CDC5426BD29E765F50F9A5C56A73
C86DF18EB278B8C8849FBD27C1C13A125129FF6855D196FAB90E325EBC2170CC
06B71B310C53ADEA582DD388AEB7BE18C72F6A52B03C11E34BBF2CA89DAEF2D3
7DB0829C4E83378245E539B398A8725A856F6F96469C1BEC22DC115EA8D92C3D
1672EA171568D793F0500E76C71D2245240C090F2B9A663C39D790B732FD30DE
28C459974F27877B3EF9CEE55A4EFCCA0181017D1CA035030DB2FAA515EC5B74
E7DB2C0A0191A78EA38EFA567090CCAD630F569F67A24EFA1BE14F09AC61E9F4
8C3C1AB57358B9AF8D66BF4052164AAF00BD05114DD547128F3C4AE61FCC15F5
D3AA7A6895B2A48C939B3BA9B6EE050D82FAA9A7C98D2BC5316323D0B29A76DC
6CBEF967FFABC32393671FA2B23A96CEF860E4EA2E53B757029D70D9247D25B8
C949D5D9B3018EA257749F332F16309FC4B5905DF83F4348F354288F8FE04B25
738252B35CC4031CCD5BA91C8233D5D8155AF0868B5ACA395BE836E6137526A9
C8560B63EACF71CB7396FA5BE2346265A9D9B4DD7D88A4FB74D73A10A0AA3422
65A7641B8136F584947F052816DD9C36B433DD8AD29A15985A9720263A4EB5B9
7475028257F602B21A61FF2D606E83C15DE0493EB436D38F95BA0D495BCAE996
0FF7A303DDBEF62572BEDB4A0C13B5A7AAB553AAB3E09221F0AC28E8CAF43179
A4E93B33A3CF9B115039526C8DE49D63D05B2AF3B4E59ECADDF158D49E53FC59
D10F73B8B68D7B0000D2A493952123F8D87DEDDB043188968A9B76F8EECA4B75
978A1FF6287D0AD99BD597A2CBB15BCDB6CA6662B523A2C6FBE6586533A81D16
C0D36F4E7A18630F15F474738445430DD3479B7D46499A00C58FF7A6E9AC3B22
82B61D647DEDA9CA0EC7767611AC4792C27A45FAD9792AD899A8E9ECA3AB7ACC
808C19D5A738A2EF4E0136DB55987650CD334A1003567A058ADF0AE8D6A3A80C
88EF9BFE74544E3E61E97B6894BEA5F2228B55340E2A24629A9C5BB3F54E685A
48A6EC2EC4727B383DB784989620BD63B8EDFDFB5C52FB5A0362056E844C74E1
020463282478265F6E24211F92DC4ED1E1BFA2BB0C86B84E2A4142ACAD1AD4C9
D011C20F1C017A4F1C44EF8EC900081ACFC625A33461A94FCC6FF0BB60E15FCF
88327891FBCE741D41DD1E977246276503B20D0ECBE1C45DE335390E238871DA
64A4C75D54053884EF8858C9DEB4DCFEBC676C497A1BDE0A462EFD3A4D41F7AC
8A96F9FBF0647D0BB7F3B7EA720684667A73FB996272E3878FED5AF9B01F0C85
122DCFFA64DB631A88DD1AC2539D081551592B088ABE4488BCEAC5EC29EB4C0A
93435EA0AFFB153173DA4F8C9A8EBD2D014654D9FE1CD1CADF3E4075E5FB2F12
E0AE2DA950EDDC88E9F13FB23F91A13FF30EAB4B91CE81EDCC0667D0D8A8ECA4
AD47A93982809EBCA609E226CDFF321ADFD514B272F53EF309E102FC94CE510E
3234E67A82ACC65FA1294FF22713D142215313C7348440ACB4E802DE14F9E7DD
2D5EFA8BB1AEE92017A25D86C8A857BC7A8484DE5AC1256C505CE85D083F2B25
4E019F260C49C83E857977E3ECFED40E89806110F361425D3C4327F8916EF136
F1E2C1F93F6FC572E505C6CBE5A7FB1F409ABAFAF00CFB64B28E36B05308AE9D
491FA7751223B54C90CFA7E0794AAA370FB5A3A0CCC3002A9B92E035E976B621
ED8737589BD4BA4DA69491F0073FE97E464B4F76B8737F3554E2CA0806470EE7
21F668EE85FEFD184086B7E0C6C0E2DEDA7F4EF7DAF59A8EDA05759A027BFC5F
31464BBDBFAAF96F0F5B173A6DBD87CEA371DF02B15FEA8736BC8ED5720CA579
B7B93F906C0CFF8F0286B3603CE12BA6DC7BC789890D5FE9AF7986D1DC2B7F2A
14B7E9DEAFC083D098DCEF28666995B842AE9299C1750AF18C97C9A96FE48CB9
BAAE8EBFB27BE7809F3CA606B957CD4170E57815B65A905F95E6DDB9BC62E8DD
3BC18611FAB3F86B7A960C8AC385D5AF4CCEF419601C01F64C40EC2A42B9632E
A47A7B70C509C0ED0AF1937F00E9E6D9815114217CF0DBB4BAAFB8A5B1CD796F
89C99A848AAAF1BDDC83E6B4CF970476179A81950F38190B035CD2336BCA622F
E3860DFDF594586EC9603888D27DB5D87B5E388EB0F366B9A32848FA2A0BB932
1762E0867D1C1BBCAFADA42E95E1D250AFF55560DB6D30926139EB7AC7269BEB
9BBFF9909B047B4F57702223F0513125EF5AE3A6582CFD54FA3A06247895E5EC
45BFF068C4BF59BEAA7A00FEB67D6047FABCB5950591EAA7F9EB679609876D06
67908E345DD9245324D7BC6CB051306A93C5BA0CB9F1754A4265B9414000BED8
45D7AAACA810BCE559C47D70BC163C945DBD690763BF428F2CCDA59D5A809FCB
6BE684F5D91A2CC3D42F06468851C273EB37DA797248ACDA4F423491E8120F7F
36E69979FABD3B907E6D2A538E05B4AB3E57AB4247F3EFF6347BAEED72D04D87
ACB6A31C5A7DB102E1ECE9F2BABB0AB08B24ABD7FBFBE26DAE4126F52650F372
C9EAC0060560EB6FB19509945F12089F4F4D1E429F9B24D6D31451F36889790A
B1DF6A997C7180DCE24B1312A4164C41D5036764999F2F8AD605C55386B57782
17B87F28E6C6EE888F4A732CDBEDC155EBF9FEADF4FB15D58B8F617A351287FE
F28C053F74C7E5705265F19137BEA96CD6AD986C4E8A79DAA93A4137AD03DEBA
A189661D96BD445AE41DEE82FFF683736FA092B1FB0CF3544D7D1B594DF1ECCB
54DD786445414932DE64E210B24711347D573FDDE1B9079666FFBB23BE66172B
CA2F10129BE08DCEFF662CA82A28C93A85C01E5098F147F40E0920C2D84ECCEF
42765773B23E9EF14D228D78DF4B8924A30CD099887495263E61C62D039A0C68
BD7FDD8FEDA271CD23C2C36D38911ABD2A1FB29A519AF80CC77911852E9C02AC
23AC336B191768E6088CDF01DFB7E0358DA417F2BF242039DD287891937AE7FD
C386B3221424346A4AF3665A355963C7540119E967E26FEE4E9ACB4778FF2DF0
70538ABDACEF0A0FDFA3E2B973AE1BBE049FD1DC5BCBFB9BD2B15F586C1C017C
EF10C9D098CCF3D2C6D3C6183F26795F1943B82837575EA61FBA63A74A02D123
6E46BE92F603C80B4631163D6E7DCCEA48FA7B26FA9914BB1EB4AD55DF68DDB0
EC955E7C408BC910F361395476DA042D0ECE4893F45CDCE7A95919D76CBB4ACD
2EB7E8A99FEF471BFC21DA4F1ED15978116BBC2DB7C44D7D50CA12C076576A4B
F8D20C5ABEB0F32E1B6F950B0E97F0689EB3C357CE492EA366146A9C6C5C1D31
2A5A2863A39A60069ECFE802A6FBA8DF907229C1CC5A07F17E71FC3BAB702628
F46DDB976B5175ADBBECB58796542973626B4D1C7982C1AC0D13F4EBC2FB47B5
2D0403499B91ADBF25B9D42DD91000F8C0E56A7ECC5B68C2806BF84019361765
E5D8DEBCE494C50AD7BD91946DA4DC79532EF7E85B6DF70A10D08DC9ED9A8CFE
51C3B1047D9C310A7A22A46895D152BA6378BEE5291519C8016696B09B9029F0
020F1D45A58F76982DFD14D01F06D7095BD37F7FAC54EA953D667CAE249C3501
60A7AB70403D27EC62D4E0E645C16C34036F1E3F5199941ED184BA33A2AC8410
81D141A7791A56E4436D6331F019754DC4FD3DD949EF9A94F745E889DDF970A7
579CEB4A5DCB074C0A3B96DAD65FD366AFD8B7B720C13E76942B9C554E6A1674
2288FAC79B41099F6AD60FC4183880081491FFA419BBA8067C6D0E3AE38A1ECC
1FC2CC9AE18CC29D86A0E8ED5CA0BF18A7A7D07FF43474B131864E3D72A76632
B38913BC1E1526D1B62B8A33D71F37723FCA93DCDD286CEDDA339E676E5205B5
284958A614838EF08AFFEBE42A0A03106392DDBB057814D291DCEFF9E0722EC1
2BD468E818489ECBDD1DB17D7C93B1ED67F964F77FC6DBDE9A574CB0A794011D
68055E4F7BE433F18E5C224945B99C10C8040A44E1CBAE55AFF1428823328BB1
DA1974C5B7B3336524E4DA41DF404E9D656D55521A788CACE948A988CF4CB9B9
403D9EA146052402494D6D20A883FE0A02DC6244293E6BC4634265E26977CDDB
73FA18184211E888D629208A2591B866E7389E8E531EBE04D392E4413E7BF071
4522D0854724DB94663C1B9FF5E499B51871C62C9934107A976CD7082701BD78
75DBC4B784969D9740D27B11333872C2AF2AB27675CA52286B05746700B6DE46
98463665CC51889EC9EE136348073AD41EFF6183F2483D69BBC789E9C7363E63
166DC22963E218EBD34853D341F0B187FE79862DFE9ADFB1AFF3CE84F45853E2
E72AEC02DAE38C3AA3181BF5E90179730CD16A1B35AF0DE86B890C7DA25F9382
06F24A189E57A0154642410BBA881789D1D74430CE0F9DD48EA80FA068893F14
C8BF59A7E315C02A52011112A6B8C9BC1C8D318F9228F27F1C85F1C9E2321811
8C011BE15E623A504ED821B9CE1B73A8AF28DF8F2A0E1E2AA63BA11F056D05E0
D9DC4CC3D66F1BB5991EE7D81BBBE5C6AF97A0C5B1076F36A4A9FE58863A9636
67DE8DCD2B0B0C61B8A2A7077D4CD9AD9990980828E4F257EE1EAF7EBC9A368B
803801EB5436DFC1AA90FF72DCBE164A3B16770C11922A9CBF0878879617347B
4281CA1E71EB3A80092508B9400181988FA2DC3DD95F26AEE30A8D76A8C7C2C5
8D45289E4AFE631433C7C37C7A1BED193E59A430987556D98C766E418549EA96
6BDC89EC3F1119298236833DDD8FCC741355DFC82BF3A2526A6A0AAC9BD03849
81500C9AA5E3D73F78E9ACED3634C509B57F06EB822F25BB9E349F432C7104EF
FE1FDBFC9973ACA3B1376F5823B219D4EF75FAADFA4CB69D7BD7FFE111447BF4
D1689AC631D210C2BC0928538EADB1E21303C9BB60B22D9CC9F4C0F4099C2635
2ED2631B712F4477C8DB4A5B26BCF5579F3F5E6D02DBF7C1A2E095C44398300B
A509BD623D82C2996A5508D25C64EC326DAA720DADA2D9E74301AAFBB9814EF4
58A99E7407F2D101AA05E3E04892F1C4366B11887E1AD9728549F0516806AFC5
4176B6B2A16319225216273F4602AFA79BE3BA37379887434FFF84F0B81AF04A
752BE0F2BF49B6DD8BAEA5521DBA546C2F7921EA77C1BC08579FD634778D2EE4
F393020A9421CFDFA4276A382F9237A8BBB01B7865DC8132F301CF0212ACC440
505E919130D2C96FEBDB23BAB922D3B55F14C429E4C8DEDE18C08DF2D5228911
C1E25C7F74E20D0E6B3CF9D55835F7E5545CB6A4A4CABE1BFF77D38346074F19
D93CF457449641488316B8F46BCE4FA8632B5EA69E4E8B6123D7E23ECB4F7228
52E72D96044C1A1AB72B6DCFABCB633FBEAA521B67B139D2123ADA5C34F8F7C6
FEE2DEBB2C69B5122C3C24AEEA54E0CA447BE081F603A084FDE34BD68895143A
D40D33DB62D69CF296FCAEC6A8C3933BA194431DA86142BF9815B0ADB76DF8EE
2325E6772F3C6A828F9001CC17935849EA917A071CE40C062062B97282B58A0A
66B95339548DB858112FC644FA2304F25BBA5AF39B237C53D38DBD3A62AEEDD6
EE176482E86B964DE3E98EA572E990EDF1E0C73BBB7AA7076D58B3DB7D900E16
5931C38AAD6D8334E6BB20EB5E9A78136F89E20104B84657EB967AB823BA1EA8
744FCF34DB396B12783769BBD202E72EA0A075FDD9589407F8BF4E3597EB8E33
764B05E60BA3AA6B09166DB3C480F74B27423817EC7C1BF2DBA5D05A463BFBD9
D69D2F767C9D22DDF93950E273C3EEE52758C78552E5B1B7D340E368C95BFE51
FC65C73D1062A954AB79FD4DB2BC766FFF1C915225E30BCE448D86E73A17F707
7E6CC45A359A055DCD9D3C53555CA62617764E0CD51BEED97F828A75E4916FA6
333F6BBC830F3951D1A35AA181B498DB84AA06380F5C1EE1690602E82259C472
20BCBC0C7983FC617557543634966F9B1B2236500F3254CDC05AAE99F5D46DB5
93A25A4C5DA42D6C083D2A9BD3B9CF85FA80C648713216F27CD43E7A2FA2DF7B
6C9CD580F7F0B8E491D2B8F06AC582E80F631D726A6C845E2379D4B42D18ADB2
4F1FBB771236AFB9454F74FEC5E895B04648EC3710C7CC59686D7CEF1C4FF90F
3F8E7E37A7948A7BE88038D99F385ABA77D43DA02A52E0CCCB5243627FACFAF2
ED0B2CA0E17C55EE135358F6DADE16C6963E70E45FB9B23AF89E00958C1EA327
F5E48E1F442F39FE59645B7BFB39BA1AD67410220B6932EE6D58B728DE1BDF92
C2ED557393A6B404635D70FFB3F4D3277E415F3E04E7411CCF490E83EABA582D
256043ADCB6E1B20AB3126C48828C1BBBADF32A9E99DCF464F57409C1443626E
669EDC7300821DE1B7DBF60FD0870068815D4A2846856699564F974143C07028
05DF616DF728A17334A86722D76948F210C4282FB620B9E4B02361C837271299
56DE46DE24B5C10307BA46E3424B9670D683BA4A3F7EF1145FCFB674CE4AB5D8
F82883449DECD405DAE95C848C6C5D0C7FD9080320064519780AA03F9ADB1137
6864C81C8B5E23A05B9B6B2A3624E161815D27A1C75D9D0500932CB08BDD6E20
3E517E1E5D767508C94B9D8B1D40B1FFDBCBB84D86626B21A7CCFA88AB7147C2
500422963B3A82479001C016C9FD07CB42A14D79F16389EABCD20AF864227F7B
B62BB1EA2C094C56F9940303BDDF82DA21D5443001760442EC189C799DCE7FC6
B6A76F67FF5CCEAD9EB94B9114EAA8054B995296BAAE5FE9ECCB871381E4741A
DE8E42626F20D9C2A2BA65D0DEDB4A48F485E654A20887F898D03DE63111A078
65091A10050EAABC1B4B8453A96E4C77D3267A13916E6BBF8067417C0792AD50
F7BE900CA86B991797626C4190DBEF9247271A342F099DD0128B5FBF33D273CB
7534943CD443544CE6DAE5A1406BE60FA4790C68C38B2ACBDDE71701C469669B
0C1BDAD26D5860043B8FA43CC340C30C0CC564017127D1B1B7A1D0A3DF5DCDDB
EBCD72F99CB411D3A4AC1A5BA0B78DC650F97E413A28B416326FD0F7ACDF24BC
3C2A332B07F216F46D2D46BB3C5FEBB8703BEDBA6B56F887F4FE25FC95CB9E02
AFE14006BA07EF15680AEC30ACFE761387547CC5C947C20D8C0A64BE78DDBF06
4E6180DF9C63B01B1C55546AE740C9E13872C94D592B22FAB2F4C4BE1C2218D1
B8E54ECC9FEE2AB233E1F1CE123DC78400E788A0C4B349453963222538022343
434C4132601DB3030EE1EC082D3FB1360F27B7833959035755CE7817C7E6353A
561BBAD6907F2C8EED9FEF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 15629759 11485508 1000 600 600
(C:\Users\lenovo\.matplotlib\tex.cache\6f289418e26df2d585f9188ec78f041f.dvi)
@start /Fa 180[71 8[63 66[{}2 83.022 /CMMI10 rf /Fb 133[37
44 2[44 46 32 33 33 1[46 42 46 69 23 2[23 1[42 25 37
1[37 1[42 10[62 1[60 46 61 65 57 3[52 19[42 1[42 1[42
1[42 42 42 6[32 32 40[{}33 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 858 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
858 a -600 858 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
90.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]]16
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 858 a @beginspecial 0 @llx 0 @lly
238 @urx 175 @ury 2380 @rwi @clip @setspecial
%%BeginDocument: C:/Users/lenovo/AppData/Local/Temp/tmpwarhjcyz/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: level2size.eps
%%Creator: Matplotlib v3.4.3, https://matplotlib.org/
%%CreationDate: Sat Apr 22 20:55:59 2023
%%BoundingBox: 0 0 238 175
%%HiResBoundingBox: 0.000000 0.000000 237.600000 174.600000
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
237.6 174.6 0 0 clipbox
gsave
0 0 m
237.6 0 l
237.6 174.6 l
0 174.6 l
cl
1.000 setgray
fill
grestore
gsave
36.006646 28.811353 m
234 28.811353 l
234 171 l
36.006646 171 l
cl
1.000 setgray
fill
grestore
0.500 setlinewidth
1 setlinejoin
0 setlinecap
[1.85 0.8] 0 setdash
0.000 setgray
gsave
197.993 142.189 36.007 28.811 clipbox
65.005672 28.811353 m
65.005672 171 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
65.0057 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
65.0057 171 o
grestore
gsave
62.515 18.393 moveto
(psmarker0)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
105.00433 28.811353 m
105.00433 171 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
105.004 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
105.004 171 o
grestore
gsave
102.514 18.393 moveto
(psmarker1)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
145.002987 28.811353 m
145.002987 171 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
145.003 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
145.003 171 o
grestore
gsave
142.512 18.393 moveto
(psmarker2)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
185.001645 28.811353 m
185.001645 171 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
185.002 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
185.002 171 o
grestore
gsave
182.511 18.393 moveto
(psmarker3)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
225.000302 28.811353 m
225.000302 171 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
225 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
225 171 o
grestore
gsave
220.019 18.393 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
45.0063 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
45.0063 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
55.006 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
55.006 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
75.0053 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
75.0053 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
85.005 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
85.005 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
95.0047 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
95.0047 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
115.004 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
115.004 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
125.004 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
125.004 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
135.003 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
135.003 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
155.003 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
155.003 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
165.002 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
165.002 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
175.002 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
175.002 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
195.001 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
195.001 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
205.001 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
205.001 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
215.001 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -1.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
215.001 171 o
grestore
gsave
96.536 3.6 moveto
(psmarker5)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 28.811353 m
234 28.811353 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 28.8114 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 28.8114 o
grestore
gsave
27.525 25.352 moveto
(psmarker6)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 49.876338 m
234 49.876338 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 49.8763 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 49.8763 o
grestore
gsave
22.544 46.417 moveto
(psmarker7)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 70.941323 m
234 70.941323 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 70.9413 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 70.9413 o
grestore
gsave
22.544 67.482 moveto
(psmarker8)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 92.006307 m
234 92.006307 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 92.0063 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 92.0063 o
grestore
gsave
22.544 88.547 moveto
(psmarker9)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 113.071292 m
234 113.071292 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 113.071 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 113.071 o
grestore
gsave
22.544 109.612 moveto
(psmarker10)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 134.136277 m
234 134.136277 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 134.136 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 134.136 o
grestore
gsave
17.563 130.677 moveto
(psmarker11)
show
grestore
[1.85 0.8] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
36.006646 155.201261 m
234 155.201261 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 155.201 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 155.201 o
grestore
gsave
17.563 151.742 moveto
(psmarker12)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 34.0776 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 34.0776 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 39.3438 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 39.3438 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 44.6101 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 44.6101 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 55.1426 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 55.1426 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 60.4088 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 60.4088 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 65.6751 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 65.6751 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 76.2076 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 76.2076 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 81.4738 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 81.4738 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 86.7401 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 86.7401 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 97.2726 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 97.2726 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 102.539 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 102.539 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 107.805 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 107.805 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 118.338 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 118.338 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 123.604 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 123.604 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 128.87 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 128.87 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 139.403 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 139.403 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 144.669 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 144.669 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 149.935 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 149.935 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 160.468 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 160.468 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 165.734 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 165.734 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
36.0066 171 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-1.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
234 171 o
grestore
gsave
11.072 64.447 moveto
(psmarker13)
show
grestore
1.000 setlinewidth
[3.7 1.6] 0 setdash
1.000 0.000 0.000 setrgbcolor
gsave
197.993 142.189 36.007 28.811 clipbox
45.006344 35.130849 m
65.005672 37.237347 l
85.005001 41.450344 l
105.00433 47.76984 l
125.003659 60.40883 l
145.002987 78.314067 l
165.002316 90.953058 l
185.001645 108.858295 l
205.000973 129.92328 l
225.000302 158.361009 l
stroke
grestore
[] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
1.000 0.000 0.000 setrgbcolor
fill
grestore
stroke
grestore
} bind def
45.0063 35.1308 o
65.0057 37.2373 o
85.005 41.4503 o
105.004 47.7698 o
125.004 60.4088 o
145.003 78.3141 o
165.002 90.9531 o
185.002 108.858 o
205.001 129.923 o
225 158.361 o
grestore
[3.7 1.6] 0 setdash
0.047 0.365 0.647 setrgbcolor
gsave
197.993 142.189 36.007 28.811 clipbox
45.006344 34.0776 m
65.005672 36.184098 l
85.005001 39.343846 l
105.00433 44.610092 l
125.003659 56.195834 l
145.002987 73.047821 l
165.002316 86.740061 l
185.001645 102.5388 l
205.000973 123.603784 l
225.000302 152.041514 l
stroke
grestore
0 setlinejoin
[] 0 setdash
gsave
197.993 142.189 36.007 28.811 clipbox
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.047 0.365 0.647 setrgbcolor
fill
grestore
stroke
grestore
} bind def
45.0063 34.0776 o
65.0057 36.1841 o
85.005 39.3438 o
105.004 44.6101 o
125.004 56.1958 o
145.003 73.0478 o
165.002 86.7401 o
185.002 102.539 o
205.001 123.604 o
225 152.042 o
grestore
0.500 setlinewidth
2 setlinecap
0.000 setgray
gsave
36.006646 28.811353 m
36.006646 171 l
stroke
grestore
gsave
234 28.811353 m
234 171 l
stroke
grestore
gsave
36.006646 28.811353 m
234 28.811353 l
stroke
grestore
gsave
36.006646 171 m
234 171 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
43.006646 135.125643 m
133.537232 135.125643 l
134.870566 135.125643 135.537232 135.79231 135.537232 137.125643 c
135.537232 164 l
135.537232 165.333333 134.870566 166 133.537232 166 c
43.006646 166 l
41.673313 166 41.006646 165.333333 41.006646 164 c
41.006646 137.125643 l
41.006646 135.79231 41.673313 135.125643 43.006646 135.125643 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
1 setlinejoin
[3.7 1.6] 0 setdash
1.000 0.000 0.000 setrgbcolor
gsave
45.006646 158.5 m
65.006646 158.5 l
stroke
grestore
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
1.000 0.000 0.000 setrgbcolor
fill
grestore
stroke
grestore
} bind def
55.0066 158.5 o
grestore
gsave
73.007 155 moveto
(psmarker14)
show
grestore
[3.7 1.6] 0 setdash
0.047 0.365 0.647 setrgbcolor
gsave
45.006646 144.562822 m
65.006646 144.562822 l
stroke
grestore
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.047 0.365 0.647 setrgbcolor
fill
grestore
stroke
grestore
} bind def
55.0066 144.563 o
grestore
gsave
73.007 141.063 moveto
(psmarker15)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 858 a
 /End PSfrag
 -600 858 a -600 -826 a
 /Hide PSfrag
 -600 -826
a -1340 -768 a Fb(PSfrag)26 b(replacemen)n(ts)p -1340
-739 741 4 v -600 -736 a
 /Unhide PSfrag
 -600 -736 a -642 -636 a
  {
 -642
-636 a Black 0.000 0.000 0.000 TeXcolorrgb Fb(2)p Black
Black -642 -636 a
  } 0/Place PSfrag
 -642 -636 a -642 -536 a
  {
 -642 -536 a
Black 0.000 0.000 0.000 TeXcolorrgb Fb(4)p Black Black
-642 -536 a
  } 1/Place PSfrag
 -642 -536 a -642 -437 a
  {
 -642 -437 a Black
0.000 0.000 0.000 TeXcolorrgb Fb(6)p Black Black -642
-437 a
  } 2/Place PSfrag
 -642 -437 a -642 -337 a
  {
 -642 -337 a Black 0.000 0.000 0.000
TeXcolorrgb Fb(8)p Black Black -642 -337 a
  } 3/Place PSfrag
 -642 -337
a -683 -238 a
  {
 -683 -238 a Black 0.000 0.000 0.000 TeXcolorrgb
Fb(10)p Black Black -683 -238 a
  } 4/Place PSfrag
 -683 -238 a -1241 -138
a
  {
 -1241 -138 a Black 0.000 0.000 0.000 TeXcolorrgb -16
x Fb(VR)i(Qualit)n(y)f(Lev)n(el)p Black Black -1241 -138
a
  } 5/Place PSfrag
 -1241 -138 a -642 -38 a
  {
 -642 -38 a Black 0.000 0.000 0.000
TeXcolorrgb Fb(0)p Black Black -642 -38 a
  } 6/Place PSfrag
 -642 -38 a
-683 61 a
  {
 -683 61 a Black 0.000 0.000 0.000 TeXcolorrgb
Fb(20)p Black Black -683 61 a
  } 7/Place PSfrag
 -683 61 a -683 161 a
  {
 -683
161 a Black 0.000 0.000 0.000 TeXcolorrgb Fb(40)p Black
Black -683 161 a
  } 8/Place PSfrag
 -683 161 a -683 261 a
  {
 -683 261 a Black
0.000 0.000 0.000 TeXcolorrgb Fb(60)p Black Black -683
261 a
  } 9/Place PSfrag
 -683 261 a -683 360 a
  {
 -683 360 a Black 0.000 0.000 0.000
TeXcolorrgb Fb(80)p Black Black -683 360 a
  } 10/Place PSfrag
 -683 360 a
-725 460 a
  {
 -725 460 a Black 0.000 0.000 0.000 TeXcolorrgb
Fb(100)p Black Black -725 460 a
  } 11/Place PSfrag
 -725 460 a -725 559 a
  {

-725 559 a Black 0.000 0.000 0.000 TeXcolorrgb Fb(120)p
Black Black -725 559 a
  } 12/Place PSfrag
 -725 559 a -1149 659 a
  {
 -1149 659
a Black 0.000 0.000 0.000 TeXcolorrgb -21 x Fb(Tile)g(Size)h(\()p
Fa(K)6 b(B)t Fb(\))p Black Black -1149 659 a
  } 13/Place PSfrag
 -1149 659
a -1088 759 a
  {
 -1088 759 a Black 0.000 0.000 0.000 TeXcolorrgb
Fb(VR)28 b(con)n(ten)n(t)f(1)p Black Black -1088 759
a
  } 14/Place PSfrag
 -1088 759 a -1088 858 a
  {
 -1088 858 a Black 0.000 0.000 0.000
TeXcolorrgb Fb(VR)h(con)n(ten)n(t)f(2)p Black Black -1088
858 a
  } 15/Place PSfrag
 -1088 858 a 1383 858 a
 currentpoint grestore moveto
 1383 858 a Black Black Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
